#include <stdio.h>
#include <stdlib.h>

void leaky_bucket(int bucket_capacity, int leak_rate, int num_packets, int packets[]) {
    int overflow[2] = {0, 0};
    int bucket = 0; // Current bucket level
    printf("Time\t\tIncoming\tBucket\t\tLeaked\t\tRemaining\n");
    for (int i = 0; i < num_packets; i++) {
        printf("%d\t\t%d", i + 1, packets[i]);
        // Add incoming packets to the bucket
        bucket += packets[i];
        if (bucket > bucket_capacity) {
            overflow[0] = 1;
            overflow[1] = bucket - bucket_capacity;
            bucket = bucket_capacity; // Discard excess packets
        }
        printf("\t%10d", bucket);
        // Leak out packets at the constant rate
        int leaked = (bucket >= leak_rate) ? leak_rate : bucket;
        bucket -= leaked;
        printf("\t%10d\t%10d\n", leaked, bucket);
        if (overflow[0] == 1) {
            printf("\t\t\t\t(Overflowed, Dropped %d)\n", overflow[1]);
            overflow[0] = 0;
        }
    }
    // Empty the bucket after all packets are processed
    int time = num_packets + 1;
    while (bucket > 0) {
        int leaked = (bucket >= leak_rate) ? leak_rate : bucket;
        printf("%d\t\b%10d\t%10d\t%10d\t%10d\n", time,0,bucket, leaked, bucket - leaked);
        bucket -= leaked;
        time++;
    }
}
int main() {
    int bucket_capacity, leak_rate, num_packets;
    printf("\nEnter the bucket capacity: ");
    scanf("%d", &bucket_capacity);
    printf("Enter the leak rate: ");
    scanf("%d", &leak_rate);
    printf("Enter the number of packets: ");
    scanf("%d", &num_packets);
    int packets[num_packets];
    printf("Enter the size of each incoming packet: ");
    for (int i = 0; i < num_packets; i++) {
        scanf("%d", &packets[i]);
    }
    printf("\nLeaky Bucket Simulation:\n\n");
    leaky_bucket(bucket_capacity, leak_rate, num_packets, packets);
    printf("\n");
    return 0;
}
